version: 2.1

orbs:
  android: circleci/android@1.0.3

executors:
  mac:
    macos:
      xcode: 12.5.0
  flutter:
    docker:
      - image: cirrusci/flutter:2.2.2
    resource_class: xlarge

#YAML anchors
reattach_workspace: &reattach
  attach_workspace:
    at: .

commands:
  install_flutter_macos:
    steps:
      - run: |
          if ! test -f "flutter_sdk.zip"; then curl -o flutter_sdk.zip https://storage.googleapis.com/flutter_infra_release/releases/stable/macos/flutter_macos_2.2.2-stable.zip; fi
          unzip flutter_sdk.zip
          echo 'export FLUTTER_HOME=~/project/flutter' >> $BASH_ENV && source $BASH_ENV
          $FLUTTER_HOME/bin/flutter pub get
  install_flutter_linux:
    steps:
      - run: |
          if ! test -f "flutter_sdk.tar.xz"; then curl -o flutter_sdk.tar.xz https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_2.2.2-stable.tar.xz; fi
          tar xf flutter_sdk.tar.xz
          echo 'export FLUTTER_HOME=~/project/flutter' >> $BASH_ENV && source $BASH_ENV
          $FLUTTER_HOME/bin/flutter pub get
  install_android_gems:
    steps:
      - restore_cache:
          key: bundle-v1-{{ checksum "android/Gemfile.lock" }}-{{ arch }}
      - run: 
          command: bundle install
          working_directory: android
      - save_cache:
          key: bundle-v1-{{ checksum "android/Gemfile.lock" }}-{{ arch }}
          paths:
            - android/vendor/bundle
  install_ios_gems:
    steps:
      - restore_cache:
          key: bundle-v1-{{ checksum "ios/Gemfile.lock" }}-{{ arch }}
      - run: 
          command: bundle install
          working_directory: ios
      - save_cache:
          key: bundle-v1-{{ checksum "ios/Gemfile.lock" }}-{{ arch }}
          paths:
            - ios/vendor/bundle
  install_android_gradle:
    steps:
      - restore_cache:
          key: jars-{{ checksum  "android/app/build.gradle" }}-{{ arch }}
      - run:
          command: gradle androidDependencies
          working_directory: android
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum  "android/app/build.gradle" }}-{{ arch }}
  install_ios_pod:
    steps:
      - restore_cache:
          key: pods-v1-{{ checksum "ios/Podfile.lock" }}-{{ arch }}
      - run: 
          command: pod install
          working_directory: ios
      - save_cache:
          key: pods-v1-{{ checksum "ios/Podfile.lock" }}-{{ arch }}
          paths:
            - ios/Pods

jobs:
  checkout_and_cache:
    docker:
      - image: cimg/base:2021.01 
    steps:
      - checkout
      - persist_to_workspace:
          root: .
          paths:
            - .
  unit_test:
    executor: flutter
    steps:
      - *reattach
      - run:
          name: Run tests
          command: flutter test --machine > unit_test_results.json
      - store_test_results:
          path: ./unit_test_results.json
  integration_test_android:
    executor:
      name: android/android-machine
      resource-class: xlarge
    steps:
      - *reattach
      - run:
          name: Create AVD
          command: |
            SYSTEM_IMAGES="system-images;android-29;default;x86"
            sdkmanager "$SYSTEM_IMAGES"
            echo "no" | avdmanager --verbose create avd -n test -k "$SYSTEM_IMAGES"
      - run:
          name: Boot emulator
          command: |
            emulator -avd test -delay-adb -verbose -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim
          background: true
      - install_flutter_linux
      - install_android_gradle
      - run:
          name: Wait for emulator
          command: |
            circle-android wait-for-boot
      - run:
          name: Disable emulator animation
          command: |
            adb shell settings put global window_animation_scale 0.0
            adb shell settings put global transition_animation_scale 0.0
            adb shell settings put global animator_duration_scale 0.0
      - run:
          name: Integration Test
          command: $FLUTTER_HOME/bin/flutter drive --driver=test_driver/integration_test_driver.dart --target=integration_test/counter_test.dart

  distribute_android:
    executor:
      name: android/android-machine
      resource-class: xlarge
    steps:
      - *reattach
      - install_flutter_linux
      - install_android_gradle
      - install_android_gems
      - run:
          command: bundle exec fastlane distribute_debug
          working_directory: android

  integration_test_ios:
    executor: mac
    steps:
      - *reattach
      - install_flutter_macos
      - install_ios_pod
      - run:
          name: pre-start simulator
          command: xcrun instruments -w "iPhone 12 (14.5) [" || true
      - run:
          name: Integration Test
          command: $FLUTTER_HOME/bin/flutter drive --driver=test_driver/integration_test_driver.dart --target=integrarion_test/counter_test.dart

  distribute_ios:
    executor: mac
    steps:
      - checkout
      - install_flutter_macos
      - install_ios_pod
      - install_ios_gems
      - run:
          command: bundle exec fastlane distribute_debug
          working_directory: ios

workflows:
  test_and_distribute:
    jobs:
      - checkout_and_cache
      - unit_test:
          requires: 
            - checkout_and_cache
      - integration_test_ios:
          requires: 
            - unit_test
      - distribute_ios:
          requires: 
            - integration_test_ios
      - integration_test_android:
          requires: 
            - unit_test
      - distribute_android:
          requires: 
            - integration_test_android
